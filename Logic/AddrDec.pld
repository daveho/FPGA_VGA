GAL22V10
AddrDec

A5   A6      A7      A8   A9   A10  A11  A12  A13  A14  A15  GND
A0   nVRAMEn nBankEn NC   NC   NC   NC   A4   A3   A2   A1   VCC

; VRAM is enabled if the address is in the window $8800-$8FFF
/nVRAMEn = A15 * /A14 * /A13 * /A12 * A11 

; Bank register is enabled if the address is, specifically, $80E0.
; Unlike the HW_VGA display controller implementation, which just
; uses -IODEV7 to enable the bank register, this chip has all
; 16 address inputs available, so we can completely decode the
; exact address (leaving open the option of supporting other
; registers.)
; 1000000011100000
/nBankEn = A15 * /A14 * /A13 * /A12 * /A11 * /A10 * /A9 * /A8 * A7 * A6 * A5 * /A4 * /A3 * /A2 * /A1 * /A0

DESCRIPTION

Address decoding for the FPGA VGA text display. This is done in a GAL because
the Upduino 3.0/3.1 doesn't have quite enough I/O pins to handle this
comfortably.

Inputs:

  A0-A15: host address bus signals

Outputs:

  nVRAMEn: active-low chip enable for the VRAM bank ($8800-$8FFF)
  nBankEn: active-low chip enable for the bank register ($80E0)

vim:ft=text:
